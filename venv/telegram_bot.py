from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import ReplyKeyboardMarkup, ReplyKeyboardRemove, InlineKeyboardButton, KeyboardButton, InlineKeyboardMarkup
from logger import dp, bot
from text import text_start, text_else, text_photo, image, error, text_
from keyboards import start_button, z, inline, inline_docs
import zayavka_cl, zayavki_za, zayavki_prostoe
from data_base import db, cursor
import datetime
from config import Token
import urllib.request

f = open('resist_trimmer.pdf', 'rb').read()
file_path = r'C:\Users\Yerek\PycharmProjects\new_system\venv\docs'

admin_id = 800703982
admin_new_id = 757709279

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    print(message.from_user.id)
    if message.from_user.id == admin_id:
        await bot.send_message(message.from_user.id, text=text_start, reply_markup=start_button)
    else:
        u_id = message.from_user.id
        d_t = datetime.datetime.today()
        data_t = str(d_t)
        await bot.send_message(message.from_user.id, text=text_, reply_markup=z)

@dp.message_handler(content_types=['document'])
async def scan_message(msg: types.Message):
    document_id = msg.document.file_id
    file_info = await bot.get_file(document_id)
    fi = file_info.file_path
    name = msg.document.file_name
    urllib.request.urlretrieve(f'https://api.telegram.org/file/bot{Token}/{fi}',f'./{name}')
    try:

        cursor.execute("INSERT INTO docs(doc) VALUES(%s)", (name,))
        db.commit()

        await bot.send_message(msg.from_user.id, '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω')
    except  Exception as e:
        await bot.send_message(msg.from_user.id, '–û—à–∏–±–∫–∞!')
    try:
        cursor.execute("INSERT INTO docs_from(file_name, data) VALUES(%s, %s)", (name, data_t,))
        db.commit()

        await bot.send_message(msg.from_user.id, '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω')
    except  Exception as e:
        await bot.send_message(msg.from_user.id, '–û—à–∏–±–∫–∞!')

@dp.message_handler(content_types=['text'])
async def public(message: types.Message):
    m = message.text
    if(m == "–î–æ–∫—É–º–µ–Ω—Ç—ã"):
        await bot.send_message(message.from_user.id, text='–¢–∞“£–¥–∞“£—ã–∑üòâ', reply_markup=inline_docs)
    elif (m == "–û—Ç—á–µ—Ç—ã"):
        await bot.send_message(message.from_user.id, text='–î–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä –∫–µ—Å—Ç–µ—Å—ñüìÇ', reply_markup=inline)
    elif (m == "–ó–∞—è–≤–∫–∏"):
        await bot.send_message(message.from_user.id, text='–ë“±–ª –∂–µ—Ä–¥–µ –∫–ª–∏–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ ”©—Ç—ñ–Ω—ñ—à—Ç–µ—Ä—ñüó£ –∫–µ–ª—ñ–ø —Ç“Ø—Å–µ–¥—ñ')
        from sql2excell import sql_2_excell
        _name = 'zayavki_clientov'
        sql_2_excell(_name)
        string_name = open('{}.xlsx'.format(_name), 'rb').read()

        await bot.send_document(message.from_user.id, string_name)


    elif (m == "–î–æ–∫—É–º–µ–Ω—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"):
        await bot.send_message(message.from_user.id, text='–ë“±–ª –∂–µ—Ä–¥–µ –∫–æ–º–ø–∞–Ω–∏—è “õ—ã–∑–º–µ—Ç–∫–µ—Ä–ª–µ—Ä—ñ –∂—ñ–±–µ—Ä–≥–µ–Ω “õ“±–∂–∞—Ç—Ç–∞—Ä —Ç“±—Ä–∞–¥—ã!')
        cursor.execute("SELECT file_name FROM docs_from")
        files = cursor.fetchall()
        for file in files:
            filename = open('{}'.format(file), 'rb').read()
            await bot.send_document(message.from_user.id, filename)

    elif(m == "–ö–Ω–∏–∂–∫–∞ –∂–∞–ª–æ–±–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"):
        await bot.send_message(message.from_user.id, text='–ï–≥–µ—Ä —Å—ñ–∑–¥—ñ“£ –∞—Ä—ã–∑-—à—ã“ì—ã–º—ã“£—ã–∑üó£ –±–æ–ª—Å–∞ /tap —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑üôÉ')

    elif (m == "–ó–∞—è–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤"):
        await bot.send_message(message.from_user.id, text='–ï–≥–µ—Ä —Å—ñ–∑–¥—ñ“£ –∞—Ä—ã–∑-—à—ã“ì—ã–º—ã“£—ã–∑üó£ –±–æ–ª—Å–∞ /zay —Ç“Ø–π–º–µ—Å—ñ–Ω –±–∞—Å—ã“£—ã–∑üôÉ')

    elif m == '123147159':
        await bot.send_message(message.from_user.id, text='“ö“±–∂–∞—Ç—Ç—ã –∂—ñ–±–µ—Ä—ñ“£—ñ–∑üóÇ')

    elif m == "–û—Ç–ø—Ä–∞–≤–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ã":
        await bot.send_message(message.from_user.id, text='–ö–æ–º–ø–∞–Ω–∏—è“ì–∞ –∂—ñ–±–µ—Ä—ñ–ª–µ—Ç—ñ–Ω –¥–æ–∫—É–º–µ–Ω—Ç—Ç–µ—Ä–¥—ñ –∂—ñ–±–µ—Ä—É ID –µ“£–≥—ñ–∑—ñ“£—ñ–∑‚úçüèª')

    else:
        await bot.send_message(message.from_user.id, text=text_else)






